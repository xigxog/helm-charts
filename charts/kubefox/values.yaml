nameOverride: ""
fullnameOverride: ""

log:
  # Configure the logging verbosity for the KubeFox operator.
  # Supported log levels: debug, info, warn, error
  level: info
  # -- Configure the logging format for the KubeFox operator.
  # Supported log formats: console, json
  format: json

image:
  name: ghcr.io/xigxog/kubefox/operator
  # Defaults to Chart's appVersion
  tag: ""
  pullPolicy: IfNotPresent

resources:
  requests:
    cpu: "0"
    memory: 64Mi
  limits:
    cpu: 500m
    memory: 128Mi

livenessProbe:
  httpGet:
    path: /healthz
    port: health
  initialDelaySeconds: 5
  periodSeconds: 15

readinessProbe:
  httpGet:
    path: /readyz
    port: health
  initialDelaySeconds: 5
  periodSeconds: 15

priorityClassName: ""
imagePullSecrets: []
nodeSelector: {}
tolerations: []
affinity: {}

extraLabels: {}
extraAnnotations: {}
extraInitContainers: []
extraContainers: []
extraVolumes: []

# TODO move to platform level and have operator manage
opentelemetry:
  enabled: false
  mode: deployment
  replicaCount: 1

  config:
    receivers:
      k8s_cluster:
        collection_interval: 60s

    # Add configuration for additional exporters here, then add them to the
    # pipelines below.
    # exporters:
    #   otlp/jaeger:
    #     endpoint: jaeger-collector.default:4317
    #     tls:
    #       insecure: true

    service:
      telemetry:
        logs:
          level: DEBUG
        metrics:
          level: none
      pipelines:
        logs:
          receivers:
            - otlp
          processors:
            - memory_limiter
            - batch
          exporters:
            - debug

        metrics:
          receivers:
            - otlp
            - k8s_cluster
          processors:
            - memory_limiter
            - batch
          exporters:
            - debug

        traces:
          receivers:
            - otlp
          processors:
            - memory_limiter
            - batch
          exporters:
            - debug

  presets:
    clusterMetrics:
      enabled: true

  # TODO add bootstrap to get cert
  extraVolumes: []
  extraVolumeMounts: []
  initContainers: []

vault:
  # To use your own instance of Vault set 'enabled' to 'false' and specify its
  # URL including protocol and port using 'externalURL'.
  enabled: true
  externalURL: "" # For example, https://my-vault:8200

  server:
    dataStorage:
      size: 1Gi
    resources:
      requests:
        memory: 128Mi
        cpu: 100m
      limits:
        memory: 128Mi
        cpu: 500m
    # Configure the logging verbosity for the Vault server.
    # Supported log levels include: trace, debug, info, warn, error
    logLevel: info
    # Configure the logging format for the Vault server.
    # Supported log formats include: standard, json
    logFormat: json

    # Here be dragons. Making changes to the values below will more than likely
    # cause problems running the default instance of Vault. Only make changes if
    # you understand the consequences.

    ########################################
    # START dragons                        #
    ########################################
    image:
      repository: ghcr.io/xigxog/vault
      tag: "1.14.10-0"
    standalone:
      enabled: true
    ha:
      enabled: false
    service:
      port: 8200
    statefulSet:
      securityContext:
        pod:
          runAsNonRoot: true
          runAsUser: 100
          runAsGroup: 1000
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
        container:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
    extraSecretEnvironmentVars:
      - envName: KUBEFOX_INSTANCE
        secretName: kubefox-vault-env
        secretKey: KUBEFOX_INSTANCE
      - envName: KUBEFOX_NAMESPACE
        secretName: kubefox-vault-env
        secretKey: KUBEFOX_NAMESPACE
  injector:
    enabled: false
  global:
    tlsDisable: false
  ########################################
  # END dragons                          #
  ########################################
